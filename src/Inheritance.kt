// Наследование

// Ключевое слово open
// В Kotlin классы и их функции по умолчанию являются final, то есть их нельзя наследовать или переопределять.
// Чтобы разрешить наследование класса или переопределение его функций, необходимо явно указать ключевое слово open

// Переопределение функций
// В подклассе можно переопределить функции, объявленные в суперклассе, с помощью ключевого слова override

// Вызов методов суперкласса
// Если в подклассе переопределена функция, но требуется также выполнить код из суперкласса,
// можно использовать ключевое слово super

// Ключевое слово final
// Если класс или функция должны быть запрещены для наследования или переопределения,
// они могут быть помечены ключевым словом final

// Родительский класс (суперкласс)
open class Animal {

    open fun sound() {
        println("Животное издает звук")
    }

    // так же можно не указывать ключ.слово final, по умолчанию все final
    final fun greeting() {
        println("Hellooooo!")
    }
}

// Дочерний класс (подкласс)
class Dog : Animal() {

    override fun sound() {
        super.sound() // Вызов метода из суперкласса
        println("Собака лает")
        super.greeting()
    }
}

fun main() {
    val animal = Animal()
    animal.sound() // Выводит "Животное издает звук"

    val dog = Dog()
    dog.sound() // Выводит "Собака лает"

}